name: Test, Build and Deploy
on:
  push:
    branches:
      - master
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: pgdb
        ports:
          - 5432/tcp
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm test
        env:
          CI: true
          DATABASE_URI: postgresql://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/pgdb
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Publish Docker
        id: dockerpub
        uses: elgohr/Publish-Docker-Github-Action@2.7
        with:
          name: helm-notifier/helm-notifier/app
          username: "phumberdroz"
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          snapshot: true
      - name: Helm test
        env:
          kubeconfig: ${{ secrets.kubeconfig }}
          docker_tag: ${{ steps.dockerpub.outputs.snapshot-tag }}
        run: |
          mkdir $HOME/.kube
          mkdir $HOME/.helm
          mkdir $HOME/.helm/plugins
          helm plugin install https://github.com/databus23/helm-diff
          helm plugin install https://github.com/rimusz/helm-tiller
          echo $kubeconfig | base64 -d > ~/.kube/config
          helm init --client-only
          helm tiller start-ci
          export HELM_HOST=127.0.0.1:44134
          helm upgrade -i --namespace openfaas-fn helm-notifier-mono deploy/helm-notifier/ --set image.tag="$docker_tag"
          helm tiller stop

